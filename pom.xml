<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.stackroute</groupId>
    <artifactId>parentPom</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>parentPom</name>
    <description>Demo project for Spring Boot</description>

    <modules>
        <module>zuulgateway</module>
        <module>config-server</module>
        <module>eureka-registry</module>
        <module>movie-cruiser-app</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>10</java.version>
        <spring-cloud.version>Finchley.SR1</spring-cloud.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.netflix.ribbon</groupId>
            <artifactId>ribbon</artifactId>
            <version>2.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.9</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-actuator</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.cloud</groupId>-->
        <!--<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>-->
        <!--<version>2.0.1.RELEASE</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
                <!--<plugin>-->
                    <!--<groupId>org.apache.maven.plugins</groupId>-->
                    <!--<artifactId>maven-surefire-plugin</artifactId>-->
                    <!--<version>2.19.1</version>-->
                <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>org.jacoco</groupId>-->
                <!--<artifactId>jacoco-maven-plugin</artifactId>-->
                <!--<version>0.7.5.201505241946</version>-->
                <!--<executions>-->
                    <!--&lt;!&ndash; The Executions required by unit tests are omitted. &ndash;&gt;-->
                    <!--&lt;!&ndash;-->
                        <!--Prepares the property pointing to the JaCoCo runtime agent which-->
                        <!--is passed as VM argument when Maven the Failsafe plugin is executed.-->
                    <!--&ndash;&gt;-->
                    <!--<execution>-->
                        <!--<id>pre-integration-test</id>-->
                        <!--<phase>pre-integration-test</phase>-->
                        <!--<goals>-->
                            <!--<goal>prepare-agent</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
                            <!--<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>-->
                            <!--&lt;!&ndash;-->
                                <!--Sets the name of the property containing the settings-->
                                <!--for JaCoCo runtime agent.-->
                            <!--&ndash;&gt;-->
                            <!--<propertyName>failsafeArgLine</propertyName>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--&lt;!&ndash;-->
                        <!--Ensures that the code coverage report for integration tests after-->
                        <!--integration tests have been run.-->
                    <!--&ndash;&gt;-->
                    <!--<execution>-->
                        <!--<id>post-integration-test</id>-->
                        <!--<phase>post-integration-test</phase>-->
                        <!--<goals>-->
                            <!--<goal>report</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
                            <!--<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>-->
                            <!--&lt;!&ndash; Sets the output directory for the code coverage report. &ndash;&gt;-->
                            <!--<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>-->
                        <!--</configuration>-->
                    <!--</execution>-->

                    <!--<execution>-->
                        <!--<id>pre-unit-test</id>-->
                        <!--<goals>-->
                            <!--<goal>prepare-agent</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
                            <!--<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>-->
                            <!--&lt;!&ndash;-->
                                <!--Sets the name of the property containing the settings-->
                                <!--for JaCoCo runtime agent.-->
                            <!--&ndash;&gt;-->
                            <!--<propertyName>surefireArgLine</propertyName>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--&lt;!&ndash;-->
                        <!--Ensures that the code coverage report for unit tests is created after-->
                        <!--unit tests have been run.-->
                    <!--&ndash;&gt;-->
                    <!--<execution>-->
                        <!--<id>post-unit-test</id>-->
                        <!--<phase>test</phase>-->
                        <!--<goals>-->
                            <!--<goal>report</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
                            <!--<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>-->
                            <!--&lt;!&ndash; Sets the output directory for the code coverage report. &ndash;&gt;-->
                            <!--<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>-->
                        <!--</configuration>-->
                    <!--</execution>-->

                <!--</executions>-->
            <!--</plugin>-->
                    </plugins>
    </build>


</project>




        <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->

